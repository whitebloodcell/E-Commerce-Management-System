<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.ecms.mapper.ColorSizeMapper">
  <resultMap id="BaseResultMap" type="com.qf.ecms.domain.entity.ColorSize">
    <!--@mbg.generated-->
    <!--@Table color_size-->
    <id column="csid" jdbcType="INTEGER" property="csid" />
    <result column="color_name" jdbcType="VARCHAR" property="colorName" />
    <result column="size_name" jdbcType="VARCHAR" property="sizeName" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="original_price" jdbcType="DECIMAL" property="originalPrice" />
    <result column="present_price" jdbcType="DECIMAL" property="presentPrice" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    csid, color_name, size_name, stock, original_price, present_price, cid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from color_size
    where csid = #{csid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from color_size
    where csid = #{csid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="csid" keyProperty="csid" parameterType="com.qf.ecms.domain.entity.ColorSize" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into color_size (color_name, size_name, stock, 
      original_price, present_price, cid
      )
    values (#{colorName,jdbcType=VARCHAR}, #{sizeName,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, 
      #{originalPrice,jdbcType=DECIMAL}, #{presentPrice,jdbcType=DECIMAL}, #{cid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="csid" keyProperty="csid" parameterType="com.qf.ecms.domain.entity.ColorSize" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into color_size
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="colorName != null">
        color_name,
      </if>
      <if test="sizeName != null">
        size_name,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="originalPrice != null">
        original_price,
      </if>
      <if test="presentPrice != null">
        present_price,
      </if>
      <if test="cid != null">
        cid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="colorName != null">
        #{colorName,jdbcType=VARCHAR},
      </if>
      <if test="sizeName != null">
        #{sizeName,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="originalPrice != null">
        #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="presentPrice != null">
        #{presentPrice,jdbcType=DECIMAL},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.ecms.domain.entity.ColorSize">
    <!--@mbg.generated-->
    update color_size
    <set>
      <if test="colorName != null">
        color_name = #{colorName,jdbcType=VARCHAR},
      </if>
      <if test="sizeName != null">
        size_name = #{sizeName,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="originalPrice != null">
        original_price = #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="presentPrice != null">
        present_price = #{presentPrice,jdbcType=DECIMAL},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
    </set>
    where csid = #{csid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.ecms.domain.entity.ColorSize">
    <!--@mbg.generated-->
    update color_size
    set color_name = #{colorName,jdbcType=VARCHAR},
      size_name = #{sizeName,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      original_price = #{originalPrice,jdbcType=DECIMAL},
      present_price = #{presentPrice,jdbcType=DECIMAL},
      cid = #{cid,jdbcType=INTEGER}
    where csid = #{csid,jdbcType=INTEGER}
  </update>

    <select id="SelectStockByCsid" resultType="Integer">
        SELECT cs.stock
        FROM color_size cs LEFT JOIN commodity c ON cs.cid = c.cid
        WHERE csid = #{csid}
        AND c.enable = 0
    </select>
</mapper>